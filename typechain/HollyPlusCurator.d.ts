/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface HollyPlusCuratorInterface extends ethers.utils.Interface {
  functions: {
    "artistPayout()": FunctionFragment;
    "artistPercentage()": FunctionFragment;
    "auctionHouseContract()": FunctionFragment;
    "auctionId()": FunctionFragment;
    "finalize()": FunctionFragment;
    "getBalance()": FunctionFragment;
    "hollyPlusContract()": FunctionFragment;
    "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)": FunctionFragment;
    "payout()": FunctionFragment;
    "payoutWETH()": FunctionFragment;
    "tokenCreatorPayout()": FunctionFragment;
    "tokenCreatorPercentage()": FunctionFragment;
    "tokenId()": FunctionFragment;
    "weth()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "artistPayout",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "artistPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "auctionHouseContract",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "auctionId", values?: undefined): string;
  encodeFunctionData(functionFragment: "finalize", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getBalance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hollyPlusContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      BigNumberish,
      BigNumberish,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "payout", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "payoutWETH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenCreatorPayout",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "tokenCreatorPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "tokenId", values?: undefined): string;
  encodeFunctionData(functionFragment: "weth", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "artistPayout",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "artistPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auctionHouseContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "auctionId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "finalize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getBalance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hollyPlusContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "payout", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "payoutWETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenCreatorPayout",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenCreatorPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "weth", data: BytesLike): Result;

  events: {
    "PaidOut()": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "PaidOut"): EventFragment;
}

export class HollyPlusCurator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: HollyPlusCuratorInterface;

  functions: {
    artistPayout(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "artistPayout()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    artistPercentage(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "artistPercentage()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    auctionHouseContract(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "auctionHouseContract()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    auctionId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "auctionId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    finalize(overrides?: Overrides): Promise<ContractTransaction>;

    "finalize()"(overrides?: Overrides): Promise<ContractTransaction>;

    getBalance(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getBalance()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    hollyPlusContract(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "hollyPlusContract()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    initialize(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)"(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    payout(overrides?: Overrides): Promise<ContractTransaction>;

    "payout()"(overrides?: Overrides): Promise<ContractTransaction>;

    payoutWETH(overrides?: Overrides): Promise<ContractTransaction>;

    "payoutWETH()"(overrides?: Overrides): Promise<ContractTransaction>;

    tokenCreatorPayout(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "tokenCreatorPayout()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    tokenCreatorPercentage(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    "tokenCreatorPercentage()"(overrides?: CallOverrides): Promise<{
      0: number;
    }>;

    tokenId(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "tokenId()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    weth(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "weth()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;
  };

  artistPayout(overrides?: CallOverrides): Promise<string>;

  "artistPayout()"(overrides?: CallOverrides): Promise<string>;

  artistPercentage(overrides?: CallOverrides): Promise<number>;

  "artistPercentage()"(overrides?: CallOverrides): Promise<number>;

  auctionHouseContract(overrides?: CallOverrides): Promise<string>;

  "auctionHouseContract()"(overrides?: CallOverrides): Promise<string>;

  auctionId(overrides?: CallOverrides): Promise<BigNumber>;

  "auctionId()"(overrides?: CallOverrides): Promise<BigNumber>;

  finalize(overrides?: Overrides): Promise<ContractTransaction>;

  "finalize()"(overrides?: Overrides): Promise<ContractTransaction>;

  getBalance(overrides?: CallOverrides): Promise<BigNumber>;

  "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

  hollyPlusContract(overrides?: CallOverrides): Promise<string>;

  "hollyPlusContract()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    _tokenId: BigNumberish,
    _tokenCreatorPercentage: BigNumberish,
    _artistPayout: string,
    _artistPercentage: BigNumberish,
    auctionDuration: BigNumberish,
    reservePrice: BigNumberish,
    curatorFeePercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)"(
    _tokenId: BigNumberish,
    _tokenCreatorPercentage: BigNumberish,
    _artistPayout: string,
    _artistPercentage: BigNumberish,
    auctionDuration: BigNumberish,
    reservePrice: BigNumberish,
    curatorFeePercentage: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  payout(overrides?: Overrides): Promise<ContractTransaction>;

  "payout()"(overrides?: Overrides): Promise<ContractTransaction>;

  payoutWETH(overrides?: Overrides): Promise<ContractTransaction>;

  "payoutWETH()"(overrides?: Overrides): Promise<ContractTransaction>;

  tokenCreatorPayout(overrides?: CallOverrides): Promise<string>;

  "tokenCreatorPayout()"(overrides?: CallOverrides): Promise<string>;

  tokenCreatorPercentage(overrides?: CallOverrides): Promise<number>;

  "tokenCreatorPercentage()"(overrides?: CallOverrides): Promise<number>;

  tokenId(overrides?: CallOverrides): Promise<BigNumber>;

  "tokenId()"(overrides?: CallOverrides): Promise<BigNumber>;

  weth(overrides?: CallOverrides): Promise<string>;

  "weth()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    artistPayout(overrides?: CallOverrides): Promise<string>;

    "artistPayout()"(overrides?: CallOverrides): Promise<string>;

    artistPercentage(overrides?: CallOverrides): Promise<number>;

    "artistPercentage()"(overrides?: CallOverrides): Promise<number>;

    auctionHouseContract(overrides?: CallOverrides): Promise<string>;

    "auctionHouseContract()"(overrides?: CallOverrides): Promise<string>;

    auctionId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionId()"(overrides?: CallOverrides): Promise<BigNumber>;

    finalize(overrides?: CallOverrides): Promise<void>;

    "finalize()"(overrides?: CallOverrides): Promise<void>;

    getBalance(overrides?: CallOverrides): Promise<BigNumber>;

    "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

    hollyPlusContract(overrides?: CallOverrides): Promise<string>;

    "hollyPlusContract()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)"(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    payout(overrides?: CallOverrides): Promise<void>;

    "payout()"(overrides?: CallOverrides): Promise<void>;

    payoutWETH(overrides?: CallOverrides): Promise<void>;

    "payoutWETH()"(overrides?: CallOverrides): Promise<void>;

    tokenCreatorPayout(overrides?: CallOverrides): Promise<string>;

    "tokenCreatorPayout()"(overrides?: CallOverrides): Promise<string>;

    tokenCreatorPercentage(overrides?: CallOverrides): Promise<number>;

    "tokenCreatorPercentage()"(overrides?: CallOverrides): Promise<number>;

    tokenId(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenId()"(overrides?: CallOverrides): Promise<BigNumber>;

    weth(overrides?: CallOverrides): Promise<string>;

    "weth()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    PaidOut(): EventFilter;
  };

  estimateGas: {
    artistPayout(overrides?: CallOverrides): Promise<BigNumber>;

    "artistPayout()"(overrides?: CallOverrides): Promise<BigNumber>;

    artistPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "artistPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    auctionHouseContract(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionHouseContract()"(overrides?: CallOverrides): Promise<BigNumber>;

    auctionId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionId()"(overrides?: CallOverrides): Promise<BigNumber>;

    finalize(overrides?: Overrides): Promise<BigNumber>;

    "finalize()"(overrides?: Overrides): Promise<BigNumber>;

    getBalance(overrides?: CallOverrides): Promise<BigNumber>;

    "getBalance()"(overrides?: CallOverrides): Promise<BigNumber>;

    hollyPlusContract(overrides?: CallOverrides): Promise<BigNumber>;

    "hollyPlusContract()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)"(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    payout(overrides?: Overrides): Promise<BigNumber>;

    "payout()"(overrides?: Overrides): Promise<BigNumber>;

    payoutWETH(overrides?: Overrides): Promise<BigNumber>;

    "payoutWETH()"(overrides?: Overrides): Promise<BigNumber>;

    tokenCreatorPayout(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenCreatorPayout()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenCreatorPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenCreatorPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenId(overrides?: CallOverrides): Promise<BigNumber>;

    "tokenId()"(overrides?: CallOverrides): Promise<BigNumber>;

    weth(overrides?: CallOverrides): Promise<BigNumber>;

    "weth()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    artistPayout(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "artistPayout()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    artistPercentage(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "artistPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionHouseContract(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "auctionHouseContract()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "auctionId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    finalize(overrides?: Overrides): Promise<PopulatedTransaction>;

    "finalize()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getBalance(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getBalance()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    hollyPlusContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "hollyPlusContract()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(uint256,uint8,address,uint8,uint256,uint256,uint8)"(
      _tokenId: BigNumberish,
      _tokenCreatorPercentage: BigNumberish,
      _artistPayout: string,
      _artistPercentage: BigNumberish,
      auctionDuration: BigNumberish,
      reservePrice: BigNumberish,
      curatorFeePercentage: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    payout(overrides?: Overrides): Promise<PopulatedTransaction>;

    "payout()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    payoutWETH(overrides?: Overrides): Promise<PopulatedTransaction>;

    "payoutWETH()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    tokenCreatorPayout(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenCreatorPayout()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenCreatorPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenCreatorPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tokenId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    weth(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "weth()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
