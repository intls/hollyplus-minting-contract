/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Erc2981 } from "./Erc2981";

export class Erc2981Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Erc2981> {
    return super.deploy(overrides || {}) as Promise<Erc2981>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc2981 {
    return super.attach(address) as Erc2981;
  }
  connect(signer: Signer): Erc2981Factory {
    return super.connect(signer) as Erc2981Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc2981 {
    return new Contract(address, _abi, signerOrProvider) as Erc2981;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bps",
        type: "uint256",
      },
    ],
    name: "UpdatedRoyalty",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b5780632a55205a14610063575b600080fd5b61004e61004936600461012c565b610095565b60405190151581526020015b60405180910390f35b61007661007136600461015b565b6100cc565b604080516001600160a01b03909316835260208301919091520161005a565b60006001600160e01b03198216632baae9fd60e01b14806100c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260208181526040808320815180830190925280548252600101546001600160a01b0316918101829052829161010a620f4240606461017c565b8251610116908761017c565b610120919061017c565b92509250509250929050565b60006020828403121561013d578081fd5b81356001600160e01b031981168114610154578182fd5b9392505050565b6000806040838503121561016d578081fd5b50508035926020909101359150565b60008160001904831182151516156101a257634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220e7040d245254d27faf23c2200655c1f9e37771e672ee85c38b69196da491a88e64736f6c63430008040033";
