/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { LibPart } from "./LibPart";

export class LibPartFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<LibPart> {
    return super.deploy(overrides || {}) as Promise<LibPart>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibPart {
    return super.attach(address) as LibPart;
  }
  connect(signer: Signer): LibPartFactory {
    return super.connect(signer) as LibPartFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibPart {
    return new Contract(address, _abi, signerOrProvider) as LibPart;
  }
}

const _abi = [
  {
    inputs: [],
    name: "TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806364d4c819146038575b600080fd5b605e7f397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb81565b60405190815260200160405180910390f3fea26469706673582212200ae27127183ff80d90a044bc744f85f1a21bf41a44778ac4b4adf2690c9173cf64736f6c63430008050033";
