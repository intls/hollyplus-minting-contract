/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HollyPlusCurator } from "./HollyPlusCurator";

export class HollyPlusCuratorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _weth: string,
    _auctionHouseContract: string,
    _hollyPlusContract: string,
    overrides?: Overrides
  ): Promise<HollyPlusCurator> {
    return super.deploy(
      _weth,
      _auctionHouseContract,
      _hollyPlusContract,
      overrides || {}
    ) as Promise<HollyPlusCurator>;
  }
  getDeployTransaction(
    _weth: string,
    _auctionHouseContract: string,
    _hollyPlusContract: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _weth,
      _auctionHouseContract,
      _hollyPlusContract,
      overrides || {}
    );
  }
  attach(address: string): HollyPlusCurator {
    return super.attach(address) as HollyPlusCurator;
  }
  connect(signer: Signer): HollyPlusCuratorFactory {
    return super.connect(signer) as HollyPlusCuratorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HollyPlusCurator {
    return new Contract(address, _abi, signerOrProvider) as HollyPlusCurator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auctionHouseContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hollyPlusContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "withWETH",
        type: "bool",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "auctionHouseContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hollyPlusContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenCreatorPercentage",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_auctionId",
        type: "uint256",
      },
    ],
    name: "setAuctionAndApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610e88380380610e8883398101604081905261002f91610072565b6001600160601b0319606092831b811660805290821b811660c05291901b1660a0526100b5565b80516001600160a01b038116811461006d57600080fd5b919050565b60008060006060848603121561008757600080fd5b61009084610056565b925061009e60208501610056565b91506100ac60408501610056565b90509250925092565b60805160601c60a05160601c60c05160601c610d5d61012b60003960008181610187015281816102780152818161063001526108ae01526000818160d1015281816104580152818161052e015281816106010152818161094a01526109df0152600081816101bb01526103810152610d5d6000f3fe60806040526004361061007f5760003560e01c80639886ccd51161004e5780639886ccd514610140578063bb65ccbc14610155578063c4d093e114610175578063d6ae71d5146101a95761008e565b806317d70f7c146100965780633fc8cef3146100bf57806363bd1d4a1461010b578063712cd340146101205761008e565b3661008e5761008c6101dd565b005b61008c6101dd565b3480156100a257600080fd5b506100ac60335481565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100f37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b6565b34801561011757600080fd5b5061008c6101dd565b34801561012c57600080fd5b5061008c61013b366004610bfb565b610364565b34801561014c57600080fd5b5061008c6103e8565b34801561016157600080fd5b5061008c610170366004610c2d565b610799565b34801561018157600080fd5b506100f37f000000000000000000000000000000000000000000000000000000000000000081565b3480156101b557600080fd5b506100f37f000000000000000000000000000000000000000000000000000000000000000081565b600260015414156102355760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001554780610246575061035e565b610273610251610891565b6034546064906102649060ff1685610ccf565b61026e9190610cad565b61093a565b6103277f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b16f2a06040518163ffffffff1660e01b815260040160206040518083038186803b1580156102cf57600080fd5b505afa1580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610ba9565b60345460649061031a9060ff1682610cee565b6102649060ff1685610ccf565b604051600081527ff9ed405379903739bd5e5c340fe551ad2be2fa82204c6916cba9042c7e135d52906020015b60405180910390a1505b60018055565b604051634b9eeda560e11b815260048101829052600160248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063973ddb4a90604401600060405180830381600087803b1580156103cd57600080fd5b505af11580156103e1573d6000803e3d6000fd5b5050505050565b6002600154141561043b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161022c565b60026001556040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156104a257600080fd5b505afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104da9190610c14565b90506000811161052c5760405162461bcd60e51b815260206004820152601a60248201527f4e6565647320746f206861766520574554482062616c616e6365000000000000604482015260640161022c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610563610891565b6034546064906105769060ff1686610ccf565b6105809190610cad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190610bd9565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b16f2a06040518163ffffffff1660e01b815260040160206040518083038186803b15801561068757600080fd5b505afa15801561069b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bf9190610ba9565b6034546064906106d29060ff1682610cee565b6106df9060ff1686610ccf565b6106e99190610cad565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561072f57600080fd5b505af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610bd9565b50604051600181527ff9ed405379903739bd5e5c340fe551ad2be2fa82204c6916cba9042c7e135d5290602001610354565b600054610100900460ff16806107b2575060005460ff16155b6107ce5760405162461bcd60e51b815260040161022c90610c5f565b600054610100900460ff161580156107f0576000805461ffff19166101011790555b6107f8610a63565b60338290556034805460ff191660ff851690811790915560641161087a5760405162461bcd60e51b815260206004820152603360248201527f546f6b656e2063726561746f722070657263656e74616765206e6565647320746044820152726f206265206c657373207468616e203130302560681b606482015260840161022c565b801561088c576000805461ff00191690555b505050565b603354604051632751b7a560e21b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639d46de94916108e59160040190815260200190565b60206040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109359190610ba9565b905090565b6109448282610ad7565b610a5f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156109a357600080fd5b505af11580156109b7573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb92506044019050602060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088c9190610bd9565b5050565b600054610100900460ff1680610a7c575060005460ff16155b610a985760405162461bcd60e51b815260040161022c90610c5f565b600054610100900460ff16158015610aba576000805461ffff19166101011790555b610ac2610b3a565b8015610ad4576000805461ff00191690555b50565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114610b2a576040519150601f19603f3d011682016040523d82523d6000602084013e610b2f565b606091505b509095945050505050565b600054610100900460ff1680610b53575060005460ff16155b610b6f5760405162461bcd60e51b815260040161022c90610c5f565b600054610100900460ff16158015610b91576000805461ffff19166101011790555b600180558015610ad4576000805461ff001916905550565b600060208284031215610bbb57600080fd5b81516001600160a01b0381168114610bd257600080fd5b9392505050565b600060208284031215610beb57600080fd5b81518015158114610bd257600080fd5b600060208284031215610c0d57600080fd5b5035919050565b600060208284031215610c2657600080fd5b5051919050565b60008060408385031215610c4057600080fd5b823560ff81168114610c5157600080fd5b946020939093013593505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082610cca57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610ce957610ce9610d11565b500290565b600060ff821660ff841680821015610d0857610d08610d11565b90039392505050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220edb9ff50233b8503625015589ac7ecc3ba3d15bf1bc0be76ac72cdfb9e1b181964736f6c63430008050033";
